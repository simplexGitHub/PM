{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "z81qnd0sbtza8"
  },
  "info": {
    "title": "RS",
    "version": "1.0"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "paths": {
    "/api/findRoute_genery": {
      "post": {
        "summary": "Create New User",
        "operationId": "post-user",
        "responses": {
          "200": {
            "description": "User Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                },
                "examples": {
                  "New User Bob Fellow": {
                    "value": {
                      "id": 12,
                      "firstName": "Bob",
                      "lastName": "Fellow",
                      "email": "bob.fellow@gmail.com",
                      "dateOfBirth": "1996-08-24",
                      "emailVerified": false,
                      "createDate": "2020-11-18"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Missing Required Information"
          },
          "409": {
            "description": "Email Already Taken"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "dateOfBirth": {
                    "type": "string",
                    "format": "date"
                  }
                },
                "required": [
                  "firstName",
                  "lastName",
                  "email",
                  "dateOfBirth"
                ]
              },
              "examples": {
                "Create User Bob Fellow": {
                  "value": {
                    "firstName": "Bob",
                    "lastName": "Fellow",
                    "email": "bob.fellow@gmail.com",
                    "dateOfBirth": "1996-08-24"
                  }
                }
              }
            }
          },
          "description": "Post the necessary fields for the API to create a new user."
        },
        "description": "Create a new user."
      },
      "parameters": []
    }
  },
  "components": {
    "schemas": {
      "User": {
        "title": "User",
        "type": "object",
        "description": "",
        "examples": [
          {
            "id": 142,
            "firstName": "Alice",
            "lastName": "Smith",
            "email": "alice.smith@gmail.com",
            "dateOfBirth": "1997-10-31",
            "emailVerified": true,
            "signUpDate": "2019-08-24"
          }
        ],
        "properties": {
          "id": {
            "type": "integer",
            "description": "Unique identifier for the given user."
          },
          "firstName": {
            "type": "string"
          },
          "lastName": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "dateOfBirth": {
            "type": "string",
            "format": "date",
            "example": "1997-10-31"
          },
          "emailVerified": {
            "type": "boolean",
            "description": "Set to true if the user's email has been verified."
          },
          "createDate": {
            "type": "string",
            "format": "date",
            "description": "The date that the user was created."
          }
        },
        "required": [
          "id",
          "firstName",
          "lastName",
          "email",
          "emailVerified"
        ]
      },
      "request": {
        "title": "requestJSON",
        "x-stoplight": {
          "id": "fn14tall86p54"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "requestJSON": {
        "$schema": "http://json-schema.org/draft-07/schema#",
        "type": "object",
        "definitions": {
          "Point": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 2
          },
          "Point3D": {
            "type": "array",
            "items": {
              "type": "number"
            },
            "minItems": 2,
            "maxItems": 3
          },
          "Point3DOrPoint": {
            "oneOf": [
              {
                "$ref": "#/definitions/Point"
              },
              {
                "$ref": "#/definitions/Point3D"
              }
            ]
          },
          "Range": {
            "type": "object",
            "properties": {
              "min": {
                "type": "number"
              },
              "max": {
                "type": "number"
              }
            },
            "required": [
              "min",
              "max"
            ]
          },
          "RoutePointParameters": {
            "type": "object",
            "properties": {
              "isFloating": {
                "type": "boolean"
              },
              "isDirection": {
                "type": "boolean"
              },
              "direction": {
                "type": "number"
              },
              "distance": {
                "$ref": "#/definitions/Range"
              },
              "edgeLegParameters": {
                "$ref": "#/definitions/LegParameters"
              }
            },
            "required": [
              "isFloating",
              "isDirection"
            ]
          },
          "LegParameters": {
            "type": "object",
            "properties": {
              "direction": {
                "type": "number"
              },
              "length": {
                "type": "number"
              }
            },
            "required": [
              "direction",
              "length"
            ]
          }
        },
        "properties": {
          "requestId": {
            "type": "string",
            "description": "this field in optional.\nthe system uses it for metadata only"
          },
          "requestFromService": {
            "type": "string",
            "description": "this field in optional.\nthe system uses it for metadata only"
          },
          "requestFromClass": {
            "type": "string",
            "description": "this field in optional.\nthe system uses it for metadata only"
          },
          "requestFromFunction": {
            "type": "string",
            "description": "this field in optional.\nthe system uses it for metadata only"
          },
          "version": {
            "type": "number",
            "description": "this field in optional.\nif 'version' is define - the RS checks the matrix version (air situation version)"
          },
          "fromTo": {
            "type": "array",
            "minItems": 2,
            "maxItems": 2,
            "description": "the main field in the request!\n1. The Route Service calculates a route from the first point in the array (fromTo[0]) to the second point (fromTo[1]).\n2. The points must be a \"cartographic\" points:\n[longitude, latitude].\n3. The points must be in the flight perimeter.",
            "items": {
              "$ref": "#/definitions/Point3DOrPoint"
            }
          },
          "heightASL": {
            "type": "number"
          },
          "isAGL": {
            "type": "boolean",
            "description": "this field define is need to compute route AGL - Above Ground Level - 'true' value\nif this field is undefined (or false) - RouteService calculates the route not relative to the ground level."
          },
          "altitudeRangeAGL": {
            "$ref": "#/definitions/Range"
          },
          "ASL_Max": {
            "type": "number",
            "description": "this field defines the maximum ASL (Avove Sea Level) height for each point in the result route"
          },
          "startFinishParameters": {
            "type": "object",
            "properties": {
              "start": {
                "$ref": "#/components/schemas/ROUTE_POINT_PARAMETERS"
              },
              "finish": {
                "$ref": "#/components/schemas/ROUTE_POINT_PARAMETERS"
              }
            },
            "required": [
              "start",
              "finish"
            ]
          },
          "staticPathASL": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/POINT3D"
            }
          },
          "allowedId": {
            "type": "string",
            "description": "the airVehicle ID"
          },
          "maxLegLength": {
            "type": "number"
          },
          "timeRange": {
            "$ref": "#/components/schemas/RANGE"
          },
          "flightTime_ms": {
            "type": "number"
          },
          "dynamicPartAltType": {
            "$ref": "#/components/schemas/DYNAMIC_ALT_TYPE"
          },
          "firstLastDynamicPartAltType": {
            "type": "object",
            "properties": {
              "first": {
                "$ref": "#/components/schemas/DYNAMIC_ALT_TYPE"
              },
              "last": {
                "$ref": "#/components/schemas/DYNAMIC_ALT_TYPE"
              }
            },
            "required": [
              "first",
              "last"
            ]
          },
          "slopeFirstLeg": {
            "$ref": "#/components/schemas/SLOPE_LEG"
          },
          "slopeLastLeg": {
            "$ref": "#/components/schemas/SLOPE_LEG"
          }
        },
        "required": [
          "fromTo",
          "dynamicPartAltType"
        ]
      },
      "RANGE": {
        "title": "RANGE",
        "x-stoplight": {
          "id": "a5tjhy3014aw6"
        },
        "type": "object",
        "properties": {
          "min": {
            "type": "number",
            "x-stoplight": {
              "id": "v39gievxuc0sb"
            },
            "description": "the 'min' field must be less or equsl to the 'max' field"
          },
          "max": {
            "type": "number",
            "x-stoplight": {
              "id": "boi1jwu5ap0xv"
            },
            "description": "the 'max' field must be more or equsl to the 'min' field"
          }
        },
        "required": [
          "min",
          "max"
        ]
      },
      "ROUTE_POINT_PARAMETERS": {
        "title": "ROUTE_POINT_PARAMETERS",
        "x-stoplight": {
          "id": "4gum25g6pfyxj"
        },
        "type": "object",
        "properties": {
          "isFloating": {
            "type": "boolean",
            "x-stoplight": {
              "id": "oy07j35fjc4yg"
            }
          },
          "isDirection": {
            "type": "boolean",
            "x-stoplight": {
              "id": "65f5mtbhzwhkm"
            }
          },
          "direction": {
            "type": "number",
            "x-stoplight": {
              "id": "o25c4zu36arxx"
            }
          },
          "distance": {
            "$ref": "#/components/schemas/RANGE",
            "x-stoplight": {
              "id": "ypgi2ajvp1zpk"
            }
          },
          "edgeLegParameters": {
            "$ref": "#/components/schemas/LEG_PAREMETERS",
            "x-stoplight": {
              "id": "x5cpkyrmqmcd2"
            }
          }
        },
        "required": [
          "isFloating",
          "isDirection"
        ]
      },
      "LEG_PAREMETERS": {
        "title": "LEG_PAREMETERS",
        "x-stoplight": {
          "id": "qyo8xlvd1ai3n"
        },
        "type": "object",
        "properties": {
          "direction": {
            "type": "number",
            "x-stoplight": {
              "id": "vvrw3q0cxxbq4"
            }
          },
          "length": {
            "type": "number",
            "x-stoplight": {
              "id": "0tilzh2ivm2nk"
            }
          }
        },
        "required": [
          "direction",
          "length"
        ]
      },
      "POINT3D": {
        "title": "POINT3D",
        "x-stoplight": {
          "id": "86g0lnw1gbu2e"
        },
        "type": "array",
        "minItems": 2,
        "maxItems": 3,
        "items": {}
      },
      "DYNAMIC_ALT_TYPE": {
        "title": "DYNAMIC_ALT_TYPE",
        "x-stoplight": {
          "id": "qq8etmasehcph"
        },
        "type": "string",
        "default": "auto",
        "example": "auto",
        "enum": [
          "auto",
          "forceByRoute_Alt"
        ],
        "examples": [
          "auto"
        ]
      },
      "SLOPE_LEG": {
        "title": "SLOPE_LEG",
        "x-stoplight": {
          "id": "j2pkug350nhrn"
        },
        "type": "object",
        "properties": {
          "slopeDegree": {
            "type": "number",
            "x-stoplight": {
              "id": "m0dzcyq1qf272"
            },
            "minimum": 0,
            "maximum": 90,
            "default": 30,
            "example": 30
          },
          "constPointHeightASL": {
            "type": "number",
            "x-stoplight": {
              "id": "o8s08zdthmn30"
            },
            "minimum": -450,
            "maximum": 10000
          }
        },
        "required": [
          "slopeDegree",
          "constPointHeightASL"
        ]
      }
    }
  }
}